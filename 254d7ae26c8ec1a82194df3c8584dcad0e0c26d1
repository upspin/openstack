{
  "comments": [
    {
      "key": {
        "uuid": "234ca6cb_d69e24a2",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "add a blank line above this one",
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aad8fbe7_9f4c21ec",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "just \u0027pager\u0027 would be a fine method name",
      "range": {
        "startLine": 168,
        "startChar": 27,
        "endLine": 168,
        "endChar": 35
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74ff095_1f08c5df",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 176,
        "startChar": 42,
        "endLine": 177,
        "endChar": 24
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "121c13a8_448121a2",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "these could be named return values. ie, on line 187 write\n\nfunc (s *openstackStorage) list(url string, perPage int) (refs []upspin.ListRefsItem, nextToken string, pageErr error) {",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 194,
        "endChar": 18
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d987f32_bfc01657",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "I\u0027m confused about the use of this error variable.\nYou set pageErr here, but then return err, and on line 220 you check the returned err for EachPage and return it, if there is one. \nWouldn\u0027t this totally circumvent the use of pageErr?",
      "range": {
        "startLine": 198,
        "startChar": 3,
        "endLine": 198,
        "endChar": 10
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74335397_71f9883d",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 6196
      },
      "writtenOn": "2017-12-13T08:57:02Z",
      "side": 1,
      "message": "Thanks - I totally missed that the the error returned by the handler func passed to EachPage would be returned by EachPage itself.",
      "parentUuid": "4d987f32_bfc01657",
      "range": {
        "startLine": 198,
        "startChar": 3,
        "endLine": 198,
        "endChar": 10
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d5f9a79_e5ac2b96",
        "filename": "cloud/storage/openstack/openstack.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "errant space",
      "range": {
        "startLine": 209,
        "startChar": 70,
        "endLine": 209,
        "endChar": 71
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a52e1b_83f5ecfa",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "Move this down a line. It should be grouped with the other upspin.io imports.",
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09a3508e_70933ed9",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "these prefixes in test errors are unnecessary\nthe test framework will show you which test and line number it came from\njust t.Fatal(err) is good here.",
      "range": {
        "startLine": 110,
        "startChar": 13,
        "endLine": 110,
        "endChar": 37
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf115aa5_7c655121",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "Canonical go style is to write what you got and what you wanted, in that order.\n\n\"List returned %d refs, want 0\", len(refs)\n\nAlso please separate these checks into two separate if statements. They may also be Errorf instead of Fatalf, because if both are wrong you should see both.",
      "range": {
        "startLine": 113,
        "startChar": 2,
        "endLine": 113,
        "endChar": 110
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6604f778_07a87844",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "Try to clean...",
      "range": {
        "startLine": 127,
        "startChar": 3,
        "endLine": 127,
        "endChar": 22
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1a82c50_ebb82ea6",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "ref. be consistent.",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 10
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "280502c4_2f3cf071",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 6196
      },
      "writtenOn": "2017-12-13T08:57:02Z",
      "side": 1,
      "message": "Thanks, putRefs used to be called object names :)",
      "parentUuid": "f1a82c50_ebb82ea6",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 10
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "713c581e_f148a0b8",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "t.Fatal(err)",
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e02c3b61_763deea8",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "(allRefs []upspin.ListRefsItem, callCount int, err error)",
      "range": {
        "startLine": 146,
        "startChar": 44,
        "endLine": 146,
        "endChar": 77
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2edc1a1_3027895c",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 40
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "706ebb28_e72d97d8",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 151,
        "endChar": 14
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08c2146_49e378d4",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "above this line:\n var refs []upspin.ListRefsItem\n\ntry to declare variables in the smallest relevant scope. in this case, refs is only used inside the loop so declare it here. the compiler generates the same code, but now you can\u0027t accidentally return refs instead of allRefs.",
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "941d859f_01e27ae9",
        "filename": "cloud/storage/openstack/openstack_test.go",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 5389
      },
      "writtenOn": "2017-12-11T21:18:57Z",
      "side": 1,
      "message": "this is fine, though, since log.Fatalf doesn\u0027t provide the context of the test framework.",
      "range": {
        "startLine": 185,
        "startChar": 14,
        "endLine": 185,
        "endChar": 39
      },
      "revId": "254d7ae26c8ec1a82194df3c8584dcad0e0c26d1",
      "serverId": "0759ed4b-3fdc-34dc-866b-f2e708168c03",
      "unresolved": true
    }
  ]
}